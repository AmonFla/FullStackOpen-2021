{"version":3,"sources":["services/persons.js","components/Person.js","components/Persons.js","components/Search.js","components/NewPerson.js","components/Notification.js","App.js","index.js"],"names":["baseUrl","axios","get","then","resp","data","newPerson","post","id","delete","editedPerson","put","Person","person","deletePerson","name","number","onClick","Persons","personToShow","map","Search","onChange","filter","value","NewPerson","onSubmit","type","Notification","message","content","className","App","useState","persons","setPersons","newName","setNewName","newNumber","setNewNumber","setFilter","notificationMessage","setNotificationMessage","useEffect","servPerson","toLowerCase","includes","event","target","preventDefault","find","Object","entries","length","window","confirm","catch","error","response","concat","toDelete","status","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4835a63a.chunk.js","sourcesContent":["import axios from 'axios' \nconst baseUrl = '/api/persons'\n\nconst getAll = () => axios.get(baseUrl).then(resp => resp.data)\n\nconst createPerson = (newPerson) => axios.post(baseUrl, newPerson).then(resp=>resp.data)\n\nconst deletePerson = (id) => axios.delete(`${baseUrl}/${id}`).then(resp=>resp)\n\nconst updatePerson = (id, editedPerson) => axios.put(`${baseUrl}/${id}`, editedPerson).then(resp=>resp.data)\n\nexport default {getAll,createPerson, deletePerson, updatePerson}\n","import React from \"react\";\n\nconst Person = ({person,deletePerson}) =>{\n    return(\n        <>\n            {person.name} {person.number} <button key={person.id} onClick={() => deletePerson(person.id)}> borrar</button><br />\n        </>\n    )\n}\n\nexport default Person\n","import React from \"react\";\nimport Person from \"./Person\";\n\nconst Persons = ({personToShow, deletePerson}) =>{\n\n    return(\n        <>\n            <h2>Numbers</h2>\n            {personToShow.map((person)=> <Person key={person.name}  person={person} deletePerson={deletePerson}/> )}\n        </>\n    )\n}\n\nexport default Persons","import React from \"react\";\n\nconst Search=({onChange, filter})=>{\n    return(\n        <>\n            filter shown with: <input onChange={onChange} value={filter} /> <br />\n\n        </>\n    )\n}\n\nexport default Search","import React from \"react\";\n\nconst NewPerson = ({onSubmit, name, number}) => {\n    return(\n        <>\n            <h2>Add a new</h2>\n            <form onSubmit={onSubmit}>\n                name: <input onChange={name.onChange} value={name.value} /> <br />\n                number: <input onChange={number.onChange} value={number.value} /> <br /> \n                <button type=\"submit\">add</button>\n            </form>\n        </>\n    )\n}\n\nexport default NewPerson","import React from 'react'\n\nconst Notification = ({ message}) => {\n    if (message.content === null) {\n      return null\n    }\n  \n    return (\n      <div className={`notificaction ${message.className}`}>\n        {message.content}\n      </div>\n    )\n  }\n\n  export default Notification","import React, { useEffect, useState } from 'react' \nimport servPerson from './services/persons'\nimport Persons from './components/Persons'\nimport Search from './components/Search'\nimport NewPerson from './components/NewPerson'\nimport Notification from './components/Notification'\n\nconst App = () => {\n  const [ persons, setPersons] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ filter, setFilter ] = useState('')\n  const [ notificationMessage, setNotificationMessage] = useState({\n      content : null,\n      className : ''\n    }\n  )\n\n  useEffect(()=>{\n    servPerson.getAll().then(persons => setPersons(persons))\n  },[])\n  \n  const saveName=(event)=>{\n    event.preventDefault()\n    const person = {...persons.find(person => person.name === newName)} \n    if(Object.entries(person).length !== 0){\n      if (window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)){\n         person.number = newNumber\n         servPerson.updatePerson(person.id, person).then(resp =>{\n            setPersons(persons.map(data => data.id !== person.id?data:resp))\n            setNewName('')\n            setNewNumber('')\n            setNotificationMessage({ content: `Updated ${person.name}`, className: 'success'})\n          }).catch(error => setNotificationMessage({ content: error.response.data.error, className: 'error'}))\n      }\n    } else{\n      const newPerson = {\n        name: newName,\n        number: newNumber,\n        id: persons.length + 1\n      }\n      servPerson.createPerson(newPerson)\n        .then(response => {\n          setPersons(persons.concat(response))\n          setNewName('')\n          setNewNumber('')\n          setNotificationMessage({ content: `Added ${response.name}`, className: 'success'})\n        }).catch(error => setNotificationMessage({ content: error.response.data.error, className: 'error'}))\n    }\n  }\n\n  const deletePerson = (id) =>{\n    const toDelete = persons.find(person => person.id === id)\n    if(window.confirm(`Delete ${toDelete.name}?`))\n      servPerson\n      .deletePerson(id)\n      .then(()=>{\n          setPersons(persons.filter((person)=> person.id !== id))\n      })\n      .catch(error => {\n        if(error.response.status === 404){\n          setNotificationMessage({ content: `Information of  ${toDelete.name} has already been removed from server`, className: 'error'})\n          setPersons(persons.filter((person)=> person.id !== id))\n        }\n      })\n  }\n  const personToShow = filter === ''\n    ? persons\n    : persons.filter (person => person.name.toLowerCase().includes(filter.toLowerCase()))\n\n \n  const name = {\n    value: newName,\n    onChange: (event) => setNewName(event.target.value)\n  }\n  const number = {\n    value: newNumber,\n    onChange: (event) => setNewNumber(event.target.value)\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={notificationMessage} />\n      <Search  onChange={(event)=>setFilter(event.target.value)}  value={filter} /> \n      <NewPerson onSubmit={saveName} name={name} number={number} />      \n      <Persons personToShow={personToShow} deletePerson={deletePerson} />\n    </div>\n  )\n}\n\nexport default App","import ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n "],"sourceRoot":""}